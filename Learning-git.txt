Git

git init => iniciar un repositorio/crea un área en memoria ram
git status => ver el estado de los archivos en el proyecto
git add [file] => agregar el file
git rm [file] => borra el archivo aparentemente porque está cacheado
git rm --cached [file] => quita los archivos agregados con el git add
    el cach significa que está en memoria ram
git commit -m "messaje" => Enviar el archivo al repositorio, el commit lo envía, una buena práctica es enviar un mensaje
git config --list => ver la configuración de git, usuario/repos y demás
git config --list --show-origin => ver la ubicación de la configuración

git log [file] => visualizar los cambios realizados
git show [file] => commits realizados y visualizar los cambios por consola
--------------------------------------------------------------------------
ver cambios entre commits

git diff [id_conmmit1] [id_conmmit2]
ej: git diff 74aef8fb5203043bb0561768b2b15799129cc572 b32c98968a25a6fb9b9343fefa6935a2f951d6e4

untracked --> Archivo sin rastraer/no se le ha hecho un add - es un área temporal
Ramas: romper en diferentes líneas de tiempo el código y unirlas al final

BugFixing => Revisión de un Bug
hotfix => arreglo en caliente

-Merge: combinar todos los cambios
git reset [id_conmmit] --hard => Volver al pasado de una forma dura, se borran los cambios anteriores
git log --stat => más claros los cambios hechos

Info para los logs:
-----------------------------------------------------------------------------
git log --oneline - Te muestra el id commit y el título del commit.
git log --decorate- Te muestra donde se encuentra el head point en el log.
git log --stat - Explica el número de líneas que se cambiaron brevemente.
git log -p- Explica el número de líneas que se cambiaron y te muestra que se cambió en el contenido.
git shortlog - Indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.
git log --graph --oneline --decorate y
git log --pretty=format:"%cn hizo un commit %h el dia %cd" - Muestra mensajes personalizados de los commits.
git log -3 - Limitamos el número de commits.
git log --after=“2018-1-2” ,
git log --after=“today” y
git log --after=“2018-1-2” --before=“today” - Commits para localizar por fechas.
git log --author=“Name Author” - Commits realizados por autor que cumplan exactamente con el nombre.
git log --grep=“INVIE” - Busca los commits que cumplan tal cual está escrito entre las comillas.
git log --grep=“INVIE” –i- Busca los commits que cumplan sin importar mayúsculas o minúsculas.
git log – index.html- Busca los commits en un archivo en específico.
git log -S “Por contenido”- Buscar los commits con el contenido dentro del archivo.
git log > log.txt - guardar los logs en un archivo txt

-------------------------------------------------------------------------------
git commit -am "message" => sirve para evitar el add . siempre y cuando alguna vez se le haya hecho un add al archivo
git checkout => me muevo a mi rama
<<<<<<< HEAD
HEAD => Versión que estoy viendo en los últimos archivos
=======
HEAD => Versión que estoy viendo en los últimos archivos
>>>>>>> a45f49e136d291d6879f2c2944bafeddd8b061ed
